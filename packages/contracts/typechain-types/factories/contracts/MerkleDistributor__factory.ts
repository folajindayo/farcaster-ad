/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MerkleDistributor,
  MerkleDistributorInterface,
} from "../../contracts/MerkleDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_platformWallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cycleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "host",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EarningsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cycleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hostCount",
        type: "uint256",
      },
    ],
    name: "PayoutCycleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PlatformFeeCollected",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_cycleIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[][]",
        name: "_proofs",
        type: "bytes32[][]",
      },
    ],
    name: "batchClaimEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateHostEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculatePlatformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cycleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claimEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hostCount",
        type: "uint256",
      },
    ],
    name: "createPayoutCycle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cycleId",
        type: "uint256",
      },
    ],
    name: "deactivatePayoutCycle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cycleId",
        type: "uint256",
      },
    ],
    name: "getPayoutCycle",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "hostCount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct MerkleDistributor.PayoutCycle",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cycleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_host",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPayoutCycleId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "payoutCycles",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hostCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercentage",
        type: "uint256",
      },
    ],
    name: "setPlatformFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_platformWallet",
        type: "address",
      },
    ],
    name: "setPlatformWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600160045560056006553480156200001b57600080fd5b5060405162001678380380620016788339810160408190526200003e91620000e6565b60016000556200004e3362000077565b6001600160a01b03918216608052600580546001600160a01b031916919092161790556200011e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e157600080fd5b919050565b60008060408385031215620000fa57600080fd5b6200010583620000c9565b91506200011560208401620000c9565b90509250929050565b608051611522620001566000396000818161018f015281816106370152818161071901528181610dac0152610eeb01526115226000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063e1525fcf11610071578063e1525fcf14610366578063e3a4494b1461036f578063f2fde38b14610382578063fa2af9da14610395578063fd1daecc146103a857600080fd5b80638da5cb5b146102585780639e5905ca14610269578063b63d7d231461027c578063cdd78cfc1461034a578063de3579aa1461035357600080fd5b80635db800f7116100f45780635db800f7146101dc578063715018a6146101f15780638333903e146101f9578063873f6f9e1461020c5780638831e9cf1461024557600080fd5b80630cbab4f714610126578063120aa8771461014c5780633e413bee1461018a578063463a1f7a146101c9575b600080fd5b6101396101343660046111fb565b610415565b6040519081526020015b60405180910390f35b61017a61015a366004611230565b600360209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610143565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610143565b6101396101d73660046111fb565b610437565b6101ef6101ea3660046112a8565b610467565b005b6101ef610874565b6101ef6102073660046111fb565b610888565b61017a61021a366004611230565b60009182526003602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6101ef6102533660046112fb565b6108de565b6001546001600160a01b03166101b1565b6101ef610277366004611316565b61095e565b61030661028a3660046111fb565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260026020818152604092839020835160a081018552815481526001820154928101929092529182015492810192909252600381015460ff161515606083015260040154608082015290565b6040516101439190600060a0820190508251825260208301516020830152604083015160408301526060830151151560608301526080830151608083015292915050565b61013960065481565b6101ef6103613660046111fb565b610a32565b61013960045481565b6101ef61037d366004611342565b610a55565b6101ef6103903660046112fb565b610fee565b6005546101b1906001600160a01b031681565b6103eb6103b63660046111fb565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909160ff9091169085565b6040805195865260208601949094529284019190915215156060830152608082015260a001610143565b600060646006548361042791906113f2565b6104319190611409565b92915050565b60008060646006548461044a91906113f2565b6104549190611409565b9050610460818461142b565b9392505050565b61046f611067565b6000848152600260205260409020600381015460ff166104d65760405162461bcd60e51b815260206004820152601a60248201527f5061796f7574206379636c65206973206e6f742061637469766500000000000060448201526064015b60405180910390fd5b600085815260036020908152604080832033845290915290205460ff16156105325760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016104cd565b6040516bffffffffffffffffffffffff193360601b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506105b284848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050855491508490506110c0565b6105ee5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016104cd565b600060646006548761060091906113f2565b61060a9190611409565b90506000610618828861142b565b60405163a9059cbb60e01b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac919061143e565b6106ea5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016104cd565b81156108085760055460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610764573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610788919061143e565b6107d45760405162461bcd60e51b815260206004820152601c60248201527f506c6174666f726d20666565207472616e73666572206661696c65640000000060448201526064016104cd565b6040518281527f1e78db4c4ee9ca4946fb3ee60599d1e0258a8b22e183510241ff770ab6332baf9060200160405180910390a15b60008881526003602090815260408083203380855290835292819020805460ff19166001179055518381528a917f36c3f03e14933cba4136cd8ef93804410ae778cac0ba0cf5cd7e6c2d9f114960910160405180910390a35050505061086e6001600055565b50505050565b61087c6110d6565b6108866000611130565b565b6108906110d6565b60148111156108d95760405162461bcd60e51b81526020600482015260156024820152744665652063616e6e6f74206578636565642032302560581b60448201526064016104cd565b600655565b6108e66110d6565b6001600160a01b03811661093c5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420706c6174666f726d2077616c6c657400000000000000000060448201526064016104cd565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6109666110d6565b600480546000918261097783611460565b909155506040805160a081018252868152602080820187815282840187815260016060808601828152426080880190815260008a81526002808952908a902098518955955193880193909355925193860193909355905160038501805460ff191691151591909117905551600490930192909255825188815290810187905291820185905291925082917f6e262d36112bc20d8210b89cb8fec0fedaf660da5cd3168beba8a653c4267845910160405180910390a250505050565b610a3a6110d6565b6000908152600260205260409020600301805460ff19169055565b610a5d611067565b848314610aa45760405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b60448201526064016104cd565b848114610aeb5760405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b60448201526064016104cd565b6000805b86811015610d8f576000888883818110610b0b57610b0b611479565b9050602002013590506000878784818110610b2857610b28611479565b905060200201359050366000878786818110610b4657610b46611479565b9050602002810190610b58919061148f565b600086815260026020526040902060038101549294509092509060ff16610bc15760405162461bcd60e51b815260206004820152601a60248201527f5061796f7574206379636c65206973206e6f742061637469766500000000000060448201526064016104cd565b600085815260036020908152604080832033845290915290205460ff1615610c1d5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016104cd565b6040516bffffffffffffffffffffffff193360601b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610c9d84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050855491508490506110c0565b610cd95760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016104cd565b6000606460065487610ceb91906113f2565b610cf59190611409565b90506000610d03828861142b565b9050610d0f818b6114d9565b600089815260036020908152604080832033808552925291829020805460ff191660011790559051919b509089907f36c3f03e14933cba4136cd8ef93804410ae778cac0ba0cf5cd7e6c2d9f11496090610d6c9085815260200190565b60405180910390a350505050505050508080610d8790611460565b915050610aef565b5060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610dfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e21919061143e565b610e5f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016104cd565b6000805b87811015610ebb576064600654888884818110610e8257610e82611479565b90506020020135610e9391906113f2565b610e9d9190611409565b610ea790836114d9565b915080610eb381611460565b915050610e63565b508015610fda5760055460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610f36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5a919061143e565b610fa65760405162461bcd60e51b815260206004820152601c60248201527f506c6174666f726d20666565207472616e73666572206661696c65640000000060448201526064016104cd565b6040518181527f1e78db4c4ee9ca4946fb3ee60599d1e0258a8b22e183510241ff770ab6332baf9060200160405180910390a15b5050610fe66001600055565b505050505050565b610ff66110d6565b6001600160a01b03811661105b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cd565b61106481611130565b50565b6002600054036110b95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104cd565b6002600055565b6000826110cd8584611182565b14949350505050565b6001546001600160a01b031633146108865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cd565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081815b84518110156111c7576111b3828683815181106111a6576111a6611479565b60200260200101516111cf565b9150806111bf81611460565b915050611187565b509392505050565b60008183106111eb576000828152602084905260409020610460565b5060009182526020526040902090565b60006020828403121561120d57600080fd5b5035919050565b80356001600160a01b038116811461122b57600080fd5b919050565b6000806040838503121561124357600080fd5b8235915061125360208401611214565b90509250929050565b60008083601f84011261126e57600080fd5b50813567ffffffffffffffff81111561128657600080fd5b6020830191508360208260051b85010111156112a157600080fd5b9250929050565b600080600080606085870312156112be57600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156112e357600080fd5b6112ef8782880161125c565b95989497509550505050565b60006020828403121561130d57600080fd5b61046082611214565b60008060006060848603121561132b57600080fd5b505081359360208301359350604090920135919050565b6000806000806000806060878903121561135b57600080fd5b863567ffffffffffffffff8082111561137357600080fd5b61137f8a838b0161125c565b9098509650602089013591508082111561139857600080fd5b6113a48a838b0161125c565b909650945060408901359150808211156113bd57600080fd5b506113ca89828a0161125c565b979a9699509497509295939492505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610431576104316113dc565b60008261142657634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610431576104316113dc565b60006020828403121561145057600080fd5b8151801515811461046057600080fd5b600060018201611472576114726113dc565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126114a657600080fd5b83018035915067ffffffffffffffff8211156114c157600080fd5b6020019150600581901b36038213156112a157600080fd5b80820180821115610431576104316113dc56fea2646970667358221220885c7cee03804bc6abb8bb6c61d7103b3d1952bd16bd3e9822c30c59157e6c3564736f6c63430008130033";

type MerkleDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleDistributor__factory extends ContractFactory {
  constructor(...args: MerkleDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdc: AddressLike,
    _platformWallet: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdc, _platformWallet, overrides || {});
  }
  override deploy(
    _usdc: AddressLike,
    _platformWallet: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdc, _platformWallet, overrides || {}) as Promise<
      MerkleDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MerkleDistributor__factory {
    return super.connect(runner) as MerkleDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDistributorInterface {
    return new Interface(_abi) as MerkleDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MerkleDistributor {
    return new Contract(address, _abi, runner) as unknown as MerkleDistributor;
  }
}
